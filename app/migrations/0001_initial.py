# Generated by Django 4.1.2 on 2024-03-14 15:35

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_edited_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(blank=True, max_length=1024, null=True)),
                ("last_name", models.CharField(blank=True, max_length=1024, null=True)),
                ("username", models.CharField(max_length=64, unique=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, db_index=True, max_length=1024, null=True, unique=True
                    ),
                ),
                ("password", models.CharField(editable=False, max_length=2048)),
                ("name", models.CharField(blank=True, max_length=2048, null=True)),
                (
                    "account_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Active", "Active"),
                            ("Inactive", "Inactive"),
                            ("Pending", "Pending"),
                            ("Deactivated", "Deactivated"),
                        ],
                        max_length=1024,
                        null=True,
                    ),
                ),
                ("login_attempts", models.PositiveIntegerField(default=0)),
                ("profile_picture", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_edited_at", models.DateTimeField(auto_now=True)),
                ("otp", models.CharField(max_length=20)),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("Email Verification", "Email Verification"),
                            ("Phone number Verification", "Phone number Verification"),
                            ("Reset Password", "Reset Password"),
                            ("Login", "Login"),
                            ("Single Sign In", "Single Sign In"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Used", "Used"),
                            ("Active", "Active"),
                            ("Expired", "Expired"),
                            ("Inactive", "Inactive"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "channel",
                    models.CharField(choices=[("Email", "Email"), ("Sms", "Sms")], max_length=20),
                ),
                ("recipient", models.CharField(max_length=1024)),
                ("expire_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_edited_at", models.DateTimeField(auto_now=True)),
                ("email", models.CharField(max_length=1024)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_type",
                    models.CharField(
                        choices=[("Payment", "Payment"), ("Withdrawal", "Withdrawal")],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Success", "Success"),
                            ("Failed", "Failed"),
                            ("In Progress", "In Progress"),
                        ],
                        max_length=50,
                    ),
                ),
                ("reference", models.CharField(max_length=1024)),
                ("provider_reference", models.CharField(blank=True, max_length=1024, null=True)),
                ("account_number", models.CharField(blank=True, max_length=10, null=True)),
                ("account_name", models.CharField(blank=True, max_length=1024, null=True)),
                ("bank_name", models.CharField(blank=True, max_length=1024, null=True)),
                ("bank_code", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
    ]
